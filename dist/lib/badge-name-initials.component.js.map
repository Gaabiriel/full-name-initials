{"version":3,"file":"badge-name-initials.component.js","sourceRoot":"","sources":["../../lib/badge-name-initials.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,iBAAiB,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAG5E,IAAM,QAAQ,GAAG,gJAAgJ,CAAC;AAClK,IAAM,KAAK,GAAG,8zBAiCX,CAAC;;;wBAYmB,EAAE;;IAErB,6CAAQ,GAAR;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACpD;IAED,sBAAsB;;IACtB,oDAAe;;IAAf,UAAgB,QAAgB;QAE5B,EAAE,CAAC,CAAC,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,EAAE,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,MAAM,CAAC,EAAE,CAAC;SAEb;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;YAGtC,IAAI,QAAQ,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC;YAE/D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC;gBAChC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;oBAEvB,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,KAAK,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;wBACxH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;qBAC/E;oBAAC,IAAI,CAAC,CAAC;wBACJ,QAAQ,EAAE,CAAC;qBACd;iBACJ;gBAAC,IAAI,CAAC,CAAC;oBACJ,QAAQ,EAAE,CAAC;iBACd;aACJ;YACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;SACxB;KACJ;;gBA5CJ,SAAS,SAAC;oBACP,QAAQ,EAAE,YAAY;oBACtB,MAAM,EAAE,CAAC,KAAK,CAAC;oBACf,QAAQ,EAAE,QAAQ;iBACrB;;;;;0BAKI,KAAK;;qCAhDV;;SA6Ca,0BAA0B","sourcesContent":["import { Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\r\n\r\n\r\nconst template = '<span class=\"m-badge m-badge--brand m-badge--wide field-tip\" [hidden]=\"isHidden\">{{initials}}<span class=\"tip-content\">{{value}}</span></span>';\r\nconst style = `\r\n  /* Hover tooltips */\r\n  .field-tip {\r\n    position:relative;\r\n  }\r\n  \r\n  .field-tip .tip-content {\r\n    cursor: default !important;\r\n    position:absolute;\r\n    top:-10px; /* - top padding */\r\n    right:9999px;   \r\n    margin-left: auto; margin-right: 0;\r\n    padding:10px;\r\n    color:#fff;\r\n    width: 200px;\r\n    background:#333;\r\n      -webkit-box-shadow:2px 2px 5px #aaa;\r\n      -moz-box-shadow:2px 2px 5px #aaa; \r\n    box-shadow:2px 2px 5px #aaa;\r\n    opacity:0;\r\n      -webkit-transition:opacity 250ms ease-out;\r\n      -moz-transition:opacity 250ms ease-out;\r\n      -ms-transition:opacity 250ms ease-out;\r\n      -o-transition:opacity 250ms ease-out;\r\n    transition:opacity 250ms ease-out;\r\n    z-index: 1000;\r\n  }\r\n  \r\n  .field-tip:hover .tip-content {\r\n    right: -85px;\r\n    opacity: 1;\r\n    z-index: 1000;\r\n  }\r\n  `;\r\n\r\n@Component({\r\n    selector: 'badge-name',\r\n    styles: [style],\r\n    template: template\r\n})\r\n\r\nexport class BadgeNameInitialsComponent implements OnInit {\r\n    rowData: any;\r\n\r\n    @Input() value: string;\r\n    initials: string = \"\";\r\n    isHidden: boolean;\r\n    ngOnInit() {\r\n        this.initials = this.getNameInitials(this.value);\r\n    }\r\n\r\n    //Get names's initials\r\n    getNameInitials(fullName: string): string {\r\n\r\n        if (fullName === null || fullName === undefined || fullName === \"\") {\r\n            this.isHidden = true;\r\n            return \"\";\r\n\r\n        } else {\r\n            let splitedName = fullName.split(\" \");\r\n\r\n            //only show the first 3 initials\r\n            let contador = splitedName.length > 2 ? 2 : splitedName.length;\r\n\r\n            for (let i = 0; i < contador; i++) {\r\n                if (splitedName[i] != \"\") {\r\n                    //if the name has \"de\",\"dos\",\"da\" preposition, it's not considered\r\n                    if (splitedName[i].toUpperCase() != \"DE\" && splitedName[i].toUpperCase() != \"DOS\" && splitedName[i].toUpperCase() != \"DA\") {\r\n                        this.initials = this.initials + splitedName[i].charAt(0).toUpperCase() + \"\";\r\n                    } else {\r\n                        contador++;\r\n                    }\r\n                } else {\r\n                    contador++;\r\n                }\r\n            }\r\n            this.isHidden = false;\r\n            return this.initials;\r\n        }\r\n    }\r\n}\r\n"]}